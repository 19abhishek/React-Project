{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek_0819/Documents/Development/React-Project/Calculator-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport classes from \"./App.module.css\";\nimport OperationButton from \"./OperationButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\n\nconst reducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.previousOperand == null && state.currentOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand === null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand === null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand == null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n\n  return { ...state,\n    overwrite: true,\n    previousOperand: null,\n    operation: null,\n    currentOperand: evaluate(state)\n  };\n};\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"/\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.calculator,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.output,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.previousOperand,\n        children: [previousOperand, operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.currentOperand,\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.spanTwo,\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"/\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.spanTwo,\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U3IK2u6L5w8LChD4hEs3C1yVO5M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abhishek_0819/Documents/Development/React-Project/Calculator-App/src/App.js"],"names":["useReducer","DigitButton","classes","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","App","dispatch","calculator","output","spanTwo"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport classes from \"./App.module.css\";\nimport OperationButton from \"./OperationButton\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.previousOperand == null && state.currentOperand == null) {\n        return state;\n      }\n      if (state.currentOperand === null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        };\n      }\n      if (state.previousOperand === null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        };\n      }\n      if (state.currentOperand == null) return state;\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null };\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1),\n      };\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state;\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n  }\n  return {\n    ...state,\n    overwrite: true,\n    previousOperand: null,\n    operation: null,\n    currentOperand: evaluate(state),\n  };\n};\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"/\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  );\n  return (\n    <div className={classes.calculator}>\n      <div className={classes.output}>\n        <div className={classes.previousOperand}>\n          {previousOperand}\n          {operation}\n        </div>\n        <div className={classes.currentOperand}>{currentOperand}</div>\n      </div>\n      <button\n        className={classes.spanTwo}\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\n        DEL\n      </button>\n      <OperationButton operation=\"/\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className={classes.spanTwo}\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}